{"version":3,"file":"blockEditor.js","mappings":"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","sources":["webpack://pysyslink-editor/./media/Block.ts","webpack://pysyslink-editor/./media/BlockInteractionManager.ts","webpack://pysyslink-editor/./media/CanvasElement.ts","webpack://pysyslink-editor/./media/Link.ts","webpack://pysyslink-editor/./media/LinkInteractionManager.ts","webpack://pysyslink-editor/./media/Movable.ts","webpack://pysyslink-editor/./media/Selectable.ts","webpack://pysyslink-editor/./media/SelectableManager.ts","webpack://pysyslink-editor/./media/util.ts","webpack://pysyslink-editor/webpack/bootstrap","webpack://pysyslink-editor/webpack/runtime/define property getters","webpack://pysyslink-editor/webpack/runtime/hasOwnProperty shorthand","webpack://pysyslink-editor/webpack/runtime/make namespace object","webpack://pysyslink-editor/./media/blockEditor.ts"],"sourcesContent":["import { Movable } from \"./Movable\";\nimport { Selectable } from \"./Selectable\";\n\nexport class Block extends Selectable implements Movable {\n    id: string;\n    label: string;\n    private x: number;\n    private y: number;\n    _isSelected: boolean = false;\n\n    public getElement(): HTMLElement | SVGElement {\n        this.upadatePortPositions();\n        return this.element;\n    }\n    private element: HTMLElement;\n\n    inputPortNumber: number;\n    outputPortNumber: number;\n    inputPorts: HTMLElement[] = [];\n    outputPorts: HTMLElement[] = [];\n\n    onMouseDownOnPortCallbacks: ((e: any, portType: \"input\" | \"output\", portIndex: number) => void)[] = [];\n\n    private onDelete: (block: Block) => void;\n\n    constructor(id: string, label: string, x: number, y: number, inputPorts: number, outputPorts: number, onDelete: (block: Block) => void) {\n        super();\n        this.id = id;\n        this.label = label;\n        this.x = x;\n        this.y = y;\n        this.inputPortNumber = inputPorts;\n        this.outputPortNumber = outputPorts;\n        this.onDelete = onDelete;\n\n        this.element = document.createElement('div');\n        \n        this.element.classList.add('block');\n        this.element.style.left = `${this.x}px`;\n        this.element.style.top = `${this.y}px`;\n        \n        const labelElement = document.createElement('div');\n        labelElement.textContent = this.label;\n        this.element.appendChild(labelElement);\n\n        for (let j = 0; j < this.inputPortNumber; j++) {\n            const inputPort = document.createElement('div');\n            inputPort.classList.add('input-port');\n            inputPort.textContent = `In ${j + 1}`;\n\n            inputPort.addEventListener('mousedown', (e: any) => {\n                this.onMouseDownInPort(e, \"input\", j);\n            });\n\n            this.element.appendChild(inputPort);\n            this.inputPorts.push(inputPort);\n        }\n    \n        // Add output ports\n        for (let i = 0; i < this.outputPortNumber; i++) {\n            const outputPort = document.createElement('div');\n            outputPort.classList.add('output-port');\n            outputPort.textContent = `Out ${i + 1}`;\n            \n            outputPort.addEventListener('mousedown', (e: any) => {\n                this.onMouseDownInPort(e, \"output\", i);\n            });\n\n            this.element.appendChild(outputPort);\n            this.outputPorts.push(outputPort);\n        }\n    }\n\n    private onMouseDownInPort(e: any, portType: \"input\" | \"output\", portIndex: number): void {\n        this.onMouseDownOnPortCallbacks.forEach(callback => {\n            callback(e, portType, portIndex);\n        });\n    }\n\n    public registerOnMouseDownOnPortCallback(callback: (e: any, portType: \"input\" | \"output\", portIndex: number) => void): void {\n        this.onMouseDownOnPortCallbacks.push(callback);\n    }\n\n    public moveTo(x: number, y: number): void {\n        this.x = x;\n        this.y = y;\n        if (this.element) {\n            this.element.style.left = `${x}px`;\n            this.element.style.top = `${y}px`;\n        }\n    }\n\n    public getState(): { type: string; id: string; x: number; y: number}[] {\n        return [{\n            type: 'move',\n            id: this.id,\n            x: this.x,\n            y: this.y\n        }];\n    }\n\n    public parseStateFromJson(blockData: { x: number; y: number; label: string }): void {\n        this.moveTo(blockData.x, blockData.y);\n        this.label = blockData.label;\n    }\n\n    public getPosition(): { x: number; y: number } {\n        return { x: this.x, y: this.y };\n    }\n\n    public moveDelta(deltaX: number, deltaY: number): void {\n        this.moveTo(this.x + deltaX, this.y + deltaY);\n    }\n\n    private upadatePortPositions(): void {\n        for (let j = 0; j < this.inputPortNumber; j++) {\n            const inputPort = this.inputPorts[j];\n\n            const position = this.getPortPosition(j, \"input\");\n            inputPort.style.left = `${position.x - this.x - inputPort.offsetWidth/4}px`;\n            inputPort.style.top = `${position.y - this.y - inputPort.offsetHeight/2}px`;\n        }\n    \n        // Add output ports\n        for (let i = 0; i < this.outputPortNumber; i++) {\n            const outputPort = this.outputPorts[i];\n           \n            const position = this.getPortPosition(i, \"output\");\n            outputPort.style.left = `${position.x - this.x - 3*outputPort.offsetWidth/4}px`;\n            outputPort.style.top = `${position.y - this.y - outputPort.offsetHeight/2}px`;\n        }\n    }\n\n    public getPortPosition(portIndex: number, portType: \"input\" | \"output\"): { x: number; y: number } {\n        const portSpacing = 20; // Spacing between ports\n        const portOffset = portIndex * portSpacing;\n    \n        // Get the block's position relative to the canvas\n        const blockX = this.x;\n        const blockY = this.y;\n    \n        // Adjust for the port type\n        if (portType === \"input\") {\n            return { x: blockX, y: blockY + portOffset + 20 };\n        } else {\n            if (this.element) {\n                return { x: blockX + this.element.offsetWidth, y: blockY + portOffset + 20 };\n            }\n            else {\n                return { x: blockX + 20, y: blockY + portOffset + 20};\n            }\n        }\n    }\n\n    public delete(): void {\n        // Remove the block's DOM element from the canvas\n        if (this.element && this.element.parentElement) {\n            this.element.parentElement.removeChild(this.element);\n        }\n\n        // Notify any managers or listeners that the block has been deleted\n        // (e.g., remove it from a block manager or update links)\n        this.onDelete(this);\n    }\n}","import { Block } from './Block';\n\nexport class BlockInteractionManager {\n    public blocks: Block[] = [];\n    private dragStartX = 0;\n    private dragStartY = 0;\n\n    private dragThreshold = 5; // Minimum distance to detect a drag\n    private isDragging = false;\n\n    private vscode: any;\n\n    private onMouseDownOnPortCallbacks: ((block: Block, e: any, portType: \"input\" | \"output\", portIndex: number) => void)[] = [];\n    private onDeleteCallbacks: ((block: Block) => void)[] = [];\n\n    constructor(vscode: any) {\n        this.vscode = vscode;\n    }\n\n    public createBlock(id: string, label: string, x: number, y: number, inputPorts: number, outputPorts: number): void {\n        const block = new Block(id, label, x, y, inputPorts, outputPorts, this.deleteBlock);\n        block.registerOnMouseDownOnPortCallback((e: any, portType: \"input\" | \"output\", portIndex: number) => {\n            this.onMouseDownOnPort(block, e, portType, portIndex);\n        });\n        this.blocks.push(block);\n    }\n\n    private onMouseDownOnPort(block: Block, e: any, portType: \"input\" | \"output\", portIndex: number): void {\n        this.vscode.postMessage({ type: 'print', text: `Mouse down on ${portType} port ${portIndex} of block ${block.id}` });\n        this.onMouseDownOnPortCallbacks.forEach(callback => {\n            callback(block, e, portType, portIndex);\n        });\n    }\n\n    public registerOnMouseDownOnPortCallback(callback: (block: Block, e: any, portType: \"input\" | \"output\", portIndex: number) => void): void {\n        this.onMouseDownOnPortCallbacks.push(callback);\n    }\n    \n    \n    public registerOnDeleteCallback(callback: (block: Block) => void): void {\n        this.onDeleteCallbacks.push(callback);\n    }\n    \n    \n    public getSelectedBlocks(): Block[] {\n        return this.blocks.filter(block => block.isSelected());\n    }\n\n    public deleteBlock = (block: Block, sendMessage: boolean = true): void => {\n        const index = this.blocks.indexOf(block);\n        if (index !== -1) {\n            this.blocks.splice(index, 1);\n        }\n        this.onDeleteCallbacks.forEach(callback => callback(block));\n        if (sendMessage) {\n            this.vscode.postMessage({ type: 'deleteBlock', id: block.id});\n        }\n    };\n}\n","export abstract class CanvasElement {\n\n    abstract getElement(): HTMLElement | SVGElement;\n\n    private onMouseDownListeners: ((canvasElement: CanvasElement, e: any) => void)[] = [];\n\n    public addElementToCanvas(canvas: HTMLElement): void {\n        if (this.getElement()) {\n            canvas.appendChild(this.getElement());\n        }\n    }\n\n    public triggerOnMouseDown(x: number, y: number)\n    {\n        let event = new MouseEvent('mousedown', {clientX: x, clientY: y});\n        this.onMouseDownListeners.forEach(listener => listener(this, event));\n    }\n\n    public addOnMouseDownListener(onMouseDown: (canvasElement: CanvasElement, e: any) => void): void {\n        this.onMouseDownListeners.push(onMouseDown);\n        this.getElement().addEventListener('mousedown', (e: any) => {\n            onMouseDown(this, e);\n        });\n    }\n}","import { debug, timeStamp } from 'console';\nimport { Block } from './Block';\nimport { Movable } from './Movable';\nimport { Selectable } from './Selectable';\n\nexport class LinkNode extends Selectable implements Movable {\n    id: string;\n    private x: number; \n    private y: number;\n    nodeElement: SVGCircleElement;\n    isHighlighted: boolean = false;\n\n    private onDeleteCallbacks: (() => void)[] = [];\n\n\n    public getElement(): HTMLElement | SVGElement {\n        return this.nodeElement;\n    }\n\n    private moveCallbacks: { (x: number, y: number) : void; }[] = [];\n\n    constructor (id: string, x: number, y: number, onDelete: (() => void) | undefined = undefined) {\n        super();\n        this.id = id;\n        this.x = x;\n        this.y = y;\n        if (onDelete) {\n            this.onDeleteCallbacks.push(onDelete);\n        }\n\n        this.nodeElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n        this.nodeElement.classList.add('link-node');\n        this.nodeElement.setAttribute(\"cx\", `${this.x}`);\n        this.nodeElement.setAttribute(\"cy\", `${this.y}`);\n        if (this._isSelected) {\n            this.nodeElement.classList.add('selected');\n        }\n        if (this.isHighlighted) {\n            this.nodeElement.classList.add('highlighted');\n        }\n        this.moveCallbacks.forEach(callback => callback(this.x, this.y));\n    }\n\n    public moveTo(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n        if (this.nodeElement) {\n            this.nodeElement.setAttribute(\"cx\", `${this.x}`);\n            this.nodeElement.setAttribute(\"cy\", `${this.y}`);\n        }\n        this.moveCallbacks.forEach(callback => callback(this.x, this.y));\n    }\n\n    public moveDelta(deltaX: number, deltaY: number): void {\n        this.moveTo(this.x + deltaX, this.y + deltaY);\n    }\n\n    public getPosition(): { x: number; y: number; } {\n        return { x: this.x, y: this.y };\n    }\n\n    public addCallback(callback: (x: number, y: number) => void) {\n        this.moveCallbacks.push(callback);\n    }\n\n    public select() {\n        this._isSelected = true;\n        if (this.nodeElement) {\n            this.nodeElement.classList.add('selected');\n        }\n    }\n\n    public unselect() {\n        this._isSelected = false;\n        if (this.nodeElement) {\n            this.nodeElement.classList.remove('selected');\n        }\n    }\n    public toggleSelect() {\n        if (this._isSelected) {\n            this.unselect();\n        } else {\n            this.select();\n        }\n    }\n\n    public highlight(): void {\n        this.isHighlighted = true;\n        if (this.nodeElement) {\n            this.nodeElement.classList.add('highlighted');\n        }\n    }\n    \n    public unhighlight(): void {\n        this.isHighlighted = false;\n        if (this.nodeElement) {\n            this.nodeElement.classList.remove('highlighted');\n        }\n    }\n\n    public delete = (): void => {\n        this.onDeleteCallbacks.forEach(callback => callback());\n    };\n\n    public addOnDeleteCallback(callback: () => void) {\n        this.onDeleteCallbacks.push(callback);\n    }\n}\n\nexport class SourceNode extends LinkNode {\n    connectedPort: undefined | { block: Block, index: number };\n\n    constructor(xOrBlock: number | Block, yOrIndex: number, onDelete: (() => void) | undefined = undefined) {\n        if (typeof xOrBlock === 'number' && typeof yOrIndex === 'number') {\n            super(String(xOrBlock) + String(yOrIndex), xOrBlock, yOrIndex, onDelete);\n        } else if (xOrBlock instanceof Block && typeof yOrIndex === 'number') {\n            const connectedPort = { block: xOrBlock, index: yOrIndex };\n            const position = connectedPort.block.getPortPosition(connectedPort.index, \"output\");\n            super(connectedPort.block.id + yOrIndex, position.x, position.y, onDelete);\n            this.connectedPort = connectedPort;\n        } else {\n            throw new Error(\"Invalid arguments provided to SourceNode constructor\");\n        }\n    }\n\n    public createNodeElement(): void {\n        if (this.nodeElement) {\n            this.nodeElement.classList.add('source-node');\n        }\n    }\n\n    public moveTo(x: number, y: number): void {\n        if (this.connectedPort) {\n            this.connectedPort = undefined;\n        }\n        super.moveTo(x, y);\n    }\n\n    public attachToPort(block: Block, index: number) {\n        this.connectedPort = { block: block, index: index };\n        this.moveToAttachedPort();\n    }\n\n    public moveToAttachedPort() {\n        const position = this.connectedPort?.block.getPortPosition(this.connectedPort.index, \"output\");\n        if (position) {\n            super.moveTo(position.x, position.y);\n        }\n    }\n\n    public disconnect() {\n        this.connectedPort = undefined;\n    }\n}\n\nexport class TargetNode extends LinkNode {\n    connectedPort: undefined | { block: Block, index: number };\n\n    constructor(xOrBlock: number | Block, yOrIndex: number, onDelete: (() => void) | undefined = undefined) {\n        if (typeof xOrBlock === 'number' && typeof yOrIndex === 'number') {\n            super(String(xOrBlock) + String(yOrIndex), xOrBlock, yOrIndex, onDelete);\n        } else if (xOrBlock instanceof Block && typeof yOrIndex === 'number') {\n            const connectedPort = { block: xOrBlock, index: yOrIndex };\n            const position = connectedPort.block.getPortPosition(connectedPort.index, \"input\");\n            super(connectedPort.block.id + yOrIndex, position.x, position.y, onDelete);\n            this.connectedPort = connectedPort;\n        } else {\n            throw new Error(\"Invalid arguments provided to SourceNode constructor\");\n        }\n    }\n\n    public createNodeElement(): void {\n        if (this.nodeElement) {\n            this.nodeElement.classList.add('target-node');\n        }\n    }\n\n    public moveTo(x: number, y: number): void {\n        if (this.connectedPort) {\n            this.connectedPort = undefined;\n        }\n        super.moveTo(x, y);\n    }\n\n    public attachToPort(block: Block, index: number) {\n        this.connectedPort = { block: block, index: index };\n        this.moveToAttachedPort();\n    }\n\n    public moveToAttachedPort() {\n        const position = this.connectedPort?.block.getPortPosition(this.connectedPort.index, \"input\");\n        if (position) {\n            super.moveTo(position.x, position.y);\n        }\n    }\n\n    public disconnect() {\n        this.connectedPort = undefined;\n    }\n}\n\nexport class LinkSegment extends Selectable implements Movable {\n    sourceLinkNode: LinkNode;\n    targetLinkNode: LinkNode;\n    segmentElement: SVGPolylineElement;\n\n    private onDelete: () => void;\n\n    public getElement(): HTMLElement | SVGElement {\n        return this.segmentElement;\n    }\n\n    constructor (sourceLinkNode: LinkNode, targetLinkNode: LinkNode, onDelete: () => void) {\n        super();\n        this.onDelete = onDelete;\n        this.sourceLinkNode = sourceLinkNode;\n        this.sourceLinkNode.addCallback(this.updateSourceLinkNodePosition);\n        this.targetLinkNode = targetLinkNode;\n        this.targetLinkNode.addCallback(this.updateTargetLinkNodePosition);\n        console.log(`link created: ${this.sourceLinkNode.id}`);\n        \n        console.log(`segment element created: ${this.sourceLinkNode.id}`);\n\n        this.segmentElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polyline\");\n        this.segmentElement.classList.add('link-line');\n        if (this._isSelected) {\n            this.segmentElement.classList.add('selected');\n        }\n        this.updatePosition();\n    }\n\n    public updatePosition() { \n        const segmentPoints = [\n            {x: this.sourceLinkNode.getPosition().x, y: this.sourceLinkNode.getPosition().y},\n            {x: this.targetLinkNode.getPosition().x, y: this.targetLinkNode.getPosition().y}\n        ];\n        const pointsString = segmentPoints.map(p => `${p.x},${p.y}`).join(\" \");\n        this.segmentElement?.setAttribute(\"points\", pointsString);\n    }\n\n    private updateSourceLinkNodePosition = (x: number, y: number) : void => {\n        this.updatePosition();\n    };\n\n    private updateTargetLinkNodePosition = (x: number, y: number) : void => {\n        this.updatePosition();\n    };\n\n    public moveTo(x: number, y: number): void {\n        let deltaX = x - this.sourceLinkNode.getPosition().x;\n        let deltaY = y - this.sourceLinkNode.getPosition().y;\n        if (!this.sourceLinkNode.isSelected()) {\n            this.sourceLinkNode.select();\n            this.sourceLinkNode.moveTo(x, y);\n        }\n        if (!this.targetLinkNode.isSelected()) {\n            this.targetLinkNode.select();\n            this.targetLinkNode.moveDelta(deltaX, deltaY);\n        }\n        this.updatePosition();\n    }\n\n    public getPosition(): { x: number; y: number; } {\n        return this.sourceLinkNode.getPosition();\n    }\n\n    public moveDelta(deltaX: number, deltaY: number): void {\n        if (!this.sourceLinkNode.isSelected()) {\n            this.sourceLinkNode.select();\n            this.sourceLinkNode.moveDelta(deltaX, deltaY);\n        }\n        if (!this.targetLinkNode.isSelected()) {\n            this.targetLinkNode.select();\n            this.targetLinkNode.moveDelta(deltaX, deltaY);\n        }\n        this.updatePosition();\n    }\n\n    public delete = (): void => {\n        this.onDelete();\n    };\n}\n\nexport class Link {\n    sourceNode: SourceNode;\n    targetNode: TargetNode;\n    intermediateNodes: LinkNode[] = [];\n    segments: LinkSegment[] = [];\n    id: string;\n\n    private onDelete: (link: Link) => void;\n\n    constructor(\n        id: string,\n        sourceNode: SourceNode,\n        targetNode: TargetNode,\n        intermediateNodes: LinkNode[] = [],\n        onDelete: (link: Link) => void\n    ) {\n        this.id = id;\n        this.sourceNode = sourceNode;\n        this.targetNode = targetNode;\n        this.intermediateNodes = intermediateNodes;\n        this.onDelete = onDelete;\n    }\n\n    public updateSegments() {\n        let newSegments: LinkSegment[] = [];\n        if (this.intermediateNodes.length === 0) {\n            let existingSegment = this.segments.find(segment => segment.sourceLinkNode === this.sourceNode && segment.targetLinkNode === this.targetNode);\n            if (existingSegment) {\n                newSegments = [existingSegment];\n            } else {\n                newSegments = [new LinkSegment(this.sourceNode, this.targetNode, () => this.onDelete(this))];\n            }\n        } else {\n            let existingSegment = this.segments.find(segment => segment.sourceLinkNode === this.sourceNode && segment.targetLinkNode === this.intermediateNodes[0]);\n            if (existingSegment) {\n                newSegments = [existingSegment];\n            } else {\n                newSegments = [new LinkSegment(this.sourceNode, this.intermediateNodes[0], () => this.onDelete(this))];\n            }\n            for (let i: number = 0; i < this.intermediateNodes.length - 1; i++) {\n                existingSegment = this.segments.find(segment => segment.sourceLinkNode === this.intermediateNodes[i] && segment.targetLinkNode === this.intermediateNodes[i + 1]);\n                if (existingSegment) {\n                    newSegments.push(existingSegment);\n                } else {\n                    newSegments.push(new LinkSegment(this.intermediateNodes[i], this.intermediateNodes[i + 1], () => this.onDelete(this)));\n                }\n            }\n            existingSegment = this.segments.find(segment => segment.sourceLinkNode === this.intermediateNodes[this.intermediateNodes.length - 1] && segment.targetLinkNode === this.targetNode);\n            if (existingSegment) {\n                newSegments.push(existingSegment);\n            } else {\n                newSegments.push(new LinkSegment(this.intermediateNodes[this.intermediateNodes.length - 1], this.targetNode, () => this.onDelete(this)));\n            }\n        }\n        this.segments = newSegments;\n        this.segments.forEach(segment => segment.updatePosition());\n    }\n\n    public updatePosition(): void {\n        this.sourceNode.moveToAttachedPort();\n        this.targetNode.moveToAttachedPort();\n        \n        this.segments.forEach(segment => segment.updatePosition());\n    }\n\n    public addToSvg(svg: SVGSVGElement): void {\n        this.updateSegments();\n        this.segments.forEach(segment => {\n            if (segment.segmentElement) {\n                svg.appendChild(segment.segmentElement);\n            }\n            else\n            {\n                throw RangeError(\"Segment element should not be null\");\n            }\n        });\n\n        this.intermediateNodes.forEach(node => {\n            if (node.nodeElement) {\n                svg.appendChild(node.nodeElement);\n            }\n        });\n\n        this.sourceNode.createNodeElement();\n        if (this.sourceNode.nodeElement) {\n            svg.appendChild(this.sourceNode.nodeElement);\n        }\n        this.targetNode.createNodeElement();\n        if (this.targetNode.nodeElement) {\n            svg.appendChild(this.targetNode.nodeElement);\n        }\n    }\n\n    removeFromSvg(svg: SVGSVGElement): void {\n        if (!svg) {\n            console.error(\"SVG element is null or undefined.\");\n            return;\n        }\n\n        try {\n            // Remove segments\n            this.segments.forEach(segment => {\n                if (segment.segmentElement && svg.contains(segment.segmentElement)) {\n                    svg.removeChild(segment.segmentElement);\n                } else {\n                    console.warn(`Segment element not found in SVG or is null: ${segment.segmentElement}`);\n                }\n            });\n\n            // Remove intermediate nodes\n            this.intermediateNodes.forEach(node => {\n                if (node.nodeElement && svg.contains(node.nodeElement)) {\n                    svg.removeChild(node.nodeElement);\n                } else {\n                    console.warn(`Intermediate node element not found in SVG or is null: ${node.nodeElement}`);\n                }\n            });\n\n            // Remove source node\n            if (this.sourceNode.nodeElement && svg.contains(this.sourceNode.nodeElement)) {\n                svg.removeChild(this.sourceNode.nodeElement);\n            } else {\n                console.warn(`Source node element not found in SVG or is null: ${this.sourceNode.nodeElement}`);\n            }\n\n            // Remove target node\n            if (this.targetNode.nodeElement && svg.contains(this.targetNode.nodeElement)) {\n                svg.removeChild(this.targetNode.nodeElement);\n            } else {\n                console.warn(`Target node element not found in SVG or is null: ${this.targetNode.nodeElement}`);\n            }\n        } catch (error) {\n            console.error(\"An error occurred while removing elements from SVG:\", error);\n        }\n    }\n\n\n    public select() {\n        this.segments.forEach(segment => segment.select());\n        this.intermediateNodes.forEach(node => node.select());\n        this.sourceNode.select();\n        this.targetNode.select();\n\n    }\n\n    public unselect(): void {\n        this.segments.forEach(segment => segment.unselect());\n        this.intermediateNodes.forEach(node => node.unselect());\n        this.sourceNode.unselect();\n        this.targetNode.unselect();\n    }\n\n    public getState(): { type: string; id: string; sourceId: string; sourcePort: number; targetId: string; targetPort: number; nodeIndex: number, nodeId: string; x: number, y: number }[] {\n        var result: { type: string; id: string; sourceId: string; sourcePort: number; targetId: string; targetPort: number; nodeIndex: number; nodeId: string; x: number; y: number; }[] = [];\n        let sourcePort = this.sourceNode.connectedPort;\n        let targetPort = this.targetNode.connectedPort;\n\n        this.intermediateNodes.forEach((node, index) => {\n            result.push({\n                type: 'moveLinkNode',\n                id: this.id,\n                sourceId: sourcePort? sourcePort.block.id : 'undefined',\n                sourcePort: sourcePort? sourcePort.index : -1,\n                targetId: targetPort? targetPort.block.id : 'undefined',\n                targetPort: targetPort? targetPort.index : -1,\n                nodeIndex: index,\n                nodeId: node.id,\n                x: node.getPosition().x,\n                y: node.getPosition().y\n            });\n        });\n\n        result.push({type: 'moveLinkNode', \n            id: this.id,\n            sourceId: sourcePort? sourcePort.block.id : 'undefined',\n            sourcePort: sourcePort? sourcePort.index : -1,\n            targetId: targetPort? targetPort.block.id : 'undefined',\n            targetPort: targetPort? targetPort.index : -1,\n            nodeIndex: -1, // -1 for sourceNode\n            nodeId: this.sourceNode.id,\n            x: this.sourceNode.getPosition().x,\n            y: this.sourceNode.getPosition().y\n         });\n        \n        result.push({type: 'moveLinkNode', \n            id: this.id,\n            sourceId: sourcePort? sourcePort.block.id : 'undefined',\n            sourcePort: sourcePort? sourcePort.index : -1,\n            targetId: targetPort? targetPort.block.id : 'undefined',\n            targetPort: targetPort? targetPort.index : -1,\n            nodeIndex: -2, // -2 for targetNode\n            nodeId: this.targetNode.id,\n            x: this.targetNode.getPosition().x,\n            y: this.targetNode.getPosition().y\n         });\n\n        return result;\n    }\n\n    public delete = (): void => {\n        this.onDelete(this);\n    };\n}\n","import { link } from 'fs';\nimport { BlockInteractionManager } from './BlockInteractionManager';\nimport { Link, LinkNode, LinkSegment, SourceNode, TargetNode } from './Link';\nimport { Block } from './Block';\nimport { getNonce } from './util';\n\nexport class LinkInteractionManager {\n    public links: Link[] = [];\n    public linksSvg: SVGSVGElement;\n    \n\n    private dragStartX = 0;\n    private dragStartY = 0;\n\n    private dragThreshold = 50; // Minimum distance to detect a drag\n    private isDragging = false;\n\n    private canvas: HTMLElement;\n    private vscode: any;\n\n    private blockInteractionManager: BlockInteractionManager;\n\n    constructor (vscode: any, canvas: HTMLElement, linksSvg: SVGSVGElement, blockInteractionManager: BlockInteractionManager) {\n        this.vscode = vscode;\n        this.canvas = canvas;\n        this.linksSvg = linksSvg;\n        this.blockInteractionManager = blockInteractionManager;\n        this.blockInteractionManager.registerOnMouseDownOnPortCallback(this.onMouseDownOnPort);\n        this.blockInteractionManager.registerOnDeleteCallback(this.onBlockDeleted);\n    }\n\n    public getAllLinkSegments(): LinkSegment[] {\n        let result: LinkSegment[] = [];\n        this.links.forEach(link => {\n            link.segments.forEach(segment => {\n                result.push(segment);\n            });\n        });\n        return result;\n    }\n    public getAllLinkNodes(): LinkNode[] {\n        let result: LinkNode[] = [];\n        this.links.forEach(link => {\n            link.intermediateNodes.forEach(node => {\n                result.push(node);\n            });\n            result.push(link.sourceNode);\n            result.push(link.targetNode);\n        });\n        return result;\n    }\n\n    public createLink(sourceNode: SourceNode, targetNode: TargetNode, intermediateNodes: LinkNode[] = []): Link {\n        let intermediateNodesData: {x: number, y: number}[] = [];\n        intermediateNodes.forEach(node => intermediateNodesData.push({x: node.getPosition().x, y: node.getPosition().y}));\n\n        let newLink = new Link(\n            getNonce(),\n            sourceNode,\n            targetNode,\n            intermediateNodes,\n            this.deleteLink\n        );\n\n        this.links.push(newLink);\n\n        this.vscode.postMessage({ type: 'addLink', \n                                    id: newLink.id,\n                                    sourceId: sourceNode.connectedPort?.block.id, \n                                    sourcePort: sourceNode.connectedPort?.index, \n                                    targetId: targetNode.connectedPort?.block.id, \n                                    targetPort: targetNode.connectedPort?.index, \n                                    intermediateNodes: intermediateNodesData});\n        \n        return newLink;\n    }\n\n    private onMouseDownOnPort = (block: Block, e: any, portType: \"input\" | \"output\", portIndex: number): void => {\n        let isLinkOnNode = false;\n        this.vscode.postMessage({ type: 'print', text: `Checking if block already have connection` });\n\n        if (portType === \"input\") {\n            this.links.forEach(link => {\n                if (link.targetNode.connectedPort?.block.id === block.id && link.targetNode.connectedPort?.index === portIndex) {\n                    this.vscode.postMessage({ type: 'print', text: `Connected link found ${link.id}` });\n                    isLinkOnNode = true;\n                }\n            });\n        } else {\n            this.links.forEach(link => {\n                if (link.sourceNode.connectedPort?.block.id === block.id && link.sourceNode.connectedPort?.index === portIndex) {\n                    this.vscode.postMessage({ type: 'print', text: `Connected link found ${link.id}` });\n                    isLinkOnNode = true;\n                }\n            });\n        }\n        \n        if (!isLinkOnNode) {\n            this.vscode.postMessage({ type: 'print', text: `Mouse down on non connected port, creating link` });\n            let newLink: Link;\n            if (portType === \"output\") {\n                newLink = this.createLink(new SourceNode(block, portIndex), \n                                new TargetNode(block.getPortPosition(portIndex, portType).x, block.getPortPosition(portIndex, portType).y));\n                newLink.sourceNode.addOnDeleteCallback(() => newLink?.delete());\n                newLink.targetNode.addOnDeleteCallback(() => newLink?.delete());\n                e.stopPropagation();\n            } else if (portType === \"input\") {\n                newLink = this.createLink(new SourceNode(block.getPortPosition(portIndex, portType).x, block.getPortPosition(portIndex, portType).y),\n                                new TargetNode(block, portIndex));\n                newLink.sourceNode.addOnDeleteCallback(() => newLink?.delete());\n                newLink.targetNode.addOnDeleteCallback(() => newLink?.delete());\n                e.stopPropagation();\n            }\n\n            // Add a temporary mousemove listener to detect drag threshold\n            const onMouseMoveThreshold = (moveEvent: MouseEvent) => {\n                const deltaX = Math.abs(moveEvent.clientX - this.dragStartX);\n                const deltaY = Math.abs(moveEvent.clientY - this.dragStartY);\n        \n                if (deltaX > this.dragThreshold || deltaY > this.dragThreshold) {\n                    // Exceeded drag threshold, start dragging\n                    this.isDragging = true;\n                    document.removeEventListener('mousemove', onMouseMoveThreshold);\n                    this.vscode.postMessage({ type: 'print', text: `Threshold revased, trigger on mouse down` });\n\n                    if (portType === \"input\") {\n                        newLink.sourceNode.unselect();\n                        newLink.sourceNode.triggerOnMouseDown(e.clientX, e.clientY);\n                    } else {\n                        newLink.targetNode.unselect();\n                        newLink.targetNode.triggerOnMouseDown(e.clientX, e.clientY);\n\n                    }\n                }   \n            };\n        \n            document.addEventListener('mousemove', onMouseMoveThreshold);\n        \n            // Handle mouseup to detect a simple click\n            const onMouseUpThreshold = () => {\n                document.removeEventListener('mousemove', onMouseMoveThreshold);\n                document.removeEventListener('mouseup', onMouseUpThreshold);\n        \n                if (!this.isDragging) {\n                    // If no drag occurred, treat it as a simple click\n                    if (e.shiftKey) {\n                        // Toggle selection if Shift is pressed\n                        block.toggleSelect();\n                    } else {\n                        // Clear selection and select only this block\n                        block.select();\n                    }\n                }\n            };\n        \n            document.addEventListener('mouseup', onMouseUpThreshold);\n        }\n    };\n    \n    public updateLinks = (): void => {\n        this.linksSvg = document.querySelector('.links') as SVGSVGElement;\n        if (!this.linksSvg) {\n            this.linksSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n            this.linksSvg.classList.add('links');\n        }\n\n        while (this.linksSvg.firstChild) {\n            this.linksSvg.removeChild(this.linksSvg.firstChild);\n        }\n\n        this.linksSvg.style.width = `${this.canvas.offsetWidth}px`;\n        this.linksSvg.style.height = `${this.canvas.offsetHeight}px`;\n        this.linksSvg.style.transform = this.canvas.style.transform; // Match the canvas transform (e.g., scale)\n\n\n        this.links.forEach(link => link.addToSvg(this.linksSvg));\n        this.links.forEach(link => link.updatePosition());\n        this.canvas.appendChild(this.linksSvg);\n    };\n\n\n    public getSelectedLinkSegments(): LinkSegment[] {\n        var result: LinkSegment[] = [];\n        this.links.forEach(link => {\n            link.segments.forEach(segment => {\n                if (segment.isSelected()) {\n                    result.push(segment);\n                }\n            });\n        });\n        return result;\n    }\n\n    public getSelectedLinkNodes(): LinkNode[] {\n        var result: LinkNode[] = [];\n        this.links.forEach(link => {\n            link.intermediateNodes.forEach(node => {\n                if (node.isSelected()) {\n                    result.push(node);\n                }\n            });\n            if (link.sourceNode.isSelected()) {result.push(link.sourceNode);}\n            if (link.targetNode.isSelected()) {result.push(link.targetNode);}\n        });\n        return result;\n    }\n\n\n    public getSelectedLinks(): Link[] {\n        var result: Link[] = [];\n        this.links.forEach(link => {\n            for (let segment of link.segments) {\n                if (segment.isSelected()) {\n                    result.push(link);\n                    break;\n                }\n            }\n        });\n        return result;\n    }\n\n    public deleteLink = (link: Link, sendMessage: boolean = true): void => {\n        link.removeFromSvg(this.linksSvg);\n        const index = this.links.indexOf(link);\n        if (index !== -1) {\n            this.links.splice(index, 1);\n        }\n        if (sendMessage) {\n            this.vscode.postMessage({ type: 'deleteLink', id: link.id});\n        }\n    };\n\n    public renderLinks(\n            linksData: { id: string, sourceId: string; sourcePort: number; targetId: string; targetPort: number; \n                sourceX: number; sourceY: number; targetX: number; targetY: number; intermediateNodes: { id: string; x: number; y: number }[] }[]): SVGSVGElement {\n        \n        this.vscode.postMessage({ type: 'print', text: `Render links: ${JSON.stringify(linksData, null, 2)}` });\n\n        this.linksSvg = document.querySelector('.links') as SVGSVGElement;\n        if (!this.linksSvg) {\n            this.linksSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n            this.linksSvg.classList.add('links');\n        }\n\n        while (this.linksSvg.firstChild) {\n            this.linksSvg.removeChild(this.linksSvg.firstChild);\n        }\n\n    \n        // Create and render new links\n        linksData.forEach(linkData => {\n            let currentLink = this.links.find(link => link.id === linkData.id);\n            if (currentLink) {\n                currentLink.intermediateNodes.forEach((node, index) => {\n                    node.moveTo(linkData.intermediateNodes[index].x, linkData.intermediateNodes[index].y);\n                });\n            } else {\n                this.vscode.postMessage({ type: 'print', text: `Link ID does not exist, creating link: ${linkData.id}` });\n                let sourceNode;\n                let targetNode;\n                if (linkData.sourceId !== 'undefined') {\n                    let sourceBlock = this.blockInteractionManager.blocks.find(block => block.id === linkData.sourceId);\n                    if (!sourceBlock) {\n                        this.vscode.postMessage( {type: 'print', text: `Target block of id: ${linkData.targetId} not found`});\n                        sourceNode = new SourceNode(linkData.sourceX, linkData.sourceY);\n                    } else {\n                        sourceNode = new SourceNode(sourceBlock, linkData.sourcePort);\n                    }\n                } else {\n                    sourceNode = new SourceNode(linkData.sourceX, linkData.sourceY);\n                }\n\n                if (linkData.targetId !== 'undefined') {\n                    let targetBlock = this.blockInteractionManager.blocks.find(block => block.id === linkData.targetId);\n                    if (!targetBlock) {\n                        this.vscode.postMessage( {type: 'print', text: `Target block of id: ${linkData.targetId} not found`});\n                        targetNode = new TargetNode(linkData.targetX, linkData.targetY);\n                    } else {\n                        targetNode = new TargetNode(targetBlock, linkData.targetPort);\n                    }\n                } else {\n                    targetNode = new TargetNode(linkData.targetX, linkData.targetY);\n                }\n\n                let intermediateNodes: LinkNode[] = [];\n                linkData.intermediateNodes.forEach(intermediateData => {\n                    intermediateNodes.push(new LinkNode(intermediateData.id, intermediateData.x, intermediateData.y));\n                });\n\n                currentLink = new Link(\n                    linkData.id,\n                    sourceNode,\n                    targetNode,\n                    intermediateNodes,\n                    this.deleteLink\n                );\n                if (currentLink) {\n                    sourceNode.addOnDeleteCallback(() => currentLink?.delete());\n                    targetNode.addOnDeleteCallback(() => currentLink?.delete());\n                }\n\n                this.links.push(currentLink);\n            }\n            currentLink.addToSvg(this.linksSvg);\n            currentLink.updatePosition();\n        });\n\n        return this.linksSvg;\n    }\n\n    public connectNodesToPorts = () : void => {\n        this.getAllLinkNodes().forEach(node => {\n            const port = this.detectPort(node);\n            if (port) {\n                node.unhighlight();\n                if (port.portType === \"input\" && node instanceof TargetNode) {\n                    node.attachToPort(port.block, port.portIndex);\n                } else if (port.portType === \"output\" && node instanceof SourceNode) {\n                    node.attachToPort(port.block, port.portIndex);\n                }\n            } else {\n                node.unhighlight();\n            }\n        });\n    };\n\n    public highlightNodesNearPorts = (e: MouseEvent) : void => {\n        this.getAllLinkNodes().forEach(node => {\n            // Detect if the node is over a port\n            const port = this.detectPort(node);\n            \n            if (port) {\n                if (port.portType === \"input\" && node instanceof TargetNode) {\n                    if (!node.connectedPort) {\n                        node.highlight();\n                    }\n                } else if (port.portType === \"output\" && node instanceof SourceNode) {\n                    if (!node.connectedPort) {\n                        node.highlight();\n                    }\n                } else {\n                    node.unhighlight();\n                }\n            } else {\n                node.unhighlight();\n            }\n        });\n    };\n\n    \n    private detectPort(node: LinkNode): { block: Block; portIndex: number; portType: \"input\" | \"output\" } | null {\n        for (const block of this.blockInteractionManager.blocks) {\n            for (let i = 0; i < block.inputPortNumber; i++) {\n                const portPosition = block.getPortPosition(i, \"input\");\n                if (Math.abs(node.getPosition().x - portPosition.x) < 10 && Math.abs(node.getPosition().y - portPosition.y) < 10) {\n                    return { block, portIndex: i, portType: \"input\" };\n                }\n            }\n            for (let i = 0; i < block.outputPortNumber; i++) {\n                const portPosition = block.getPortPosition(i, \"output\");\n                if (Math.abs(node.getPosition().x - portPosition.x) < 10 && Math.abs(node.getPosition().y - portPosition.y) < 10) {\n                    return { block, portIndex: i, portType: \"output\" };\n                }\n            }\n        }\n        return null;\n    }\n\n    public onBlockDeleted = (block: Block): void => {\n        this.links.forEach(link => {\n            if (link.sourceNode.connectedPort?.block.id === block.id) {\n                link.sourceNode.connectedPort = undefined;\n            }\n            if (link.targetNode.connectedPort?.block.id === block.id) {\n                link.targetNode.connectedPort = undefined;\n            }\n        });\n    };\n}","export interface Movable {\n    moveTo(x: number, y: number): void;\n    moveDelta(deltaX: number, deltaY: number): void;\n    getPosition(): { x: number; y: number };\n}\n\nexport function isMovable(object: any): object is Movable {\n    return (object as Movable).moveDelta !== undefined;\n}","import { CanvasElement } from \"./CanvasElement\";\n\nexport abstract class Selectable extends CanvasElement {\n    _isSelected: boolean = false;\n\n    public select(): void {\n        this._isSelected = true;\n        this.getElement().classList.add('selected');\n    }\n\n    public unselect(): void {\n        this._isSelected = false;\n        this.getElement().classList.remove('selected');\n    }\n\n    public isSelected(): boolean {\n        return this._isSelected;\n    }\n\n    public toggleSelect(): void {\n        this._isSelected = !this._isSelected;\n        if (this._isSelected) {\n            this.select();\n        } else {\n            this.unselect();\n        }\n    }   \n    \n    public abstract delete(): void;\n}","import { Selectable } from \"./Selectable\";\nimport { Movable, isMovable } from \"./Movable\";\nimport { CanvasElement } from \"./CanvasElement\";\n\nexport class SelectableManager {\n    private dragStartX = 0;\n    private dragStartY = 0;\n\n    private dragThreshold = 5; // Minimum distance to detect a drag\n    private isDragging = false;\n\n    private selectionBox: HTMLElement | null = null;\n\n    private vscode: any;\n    private canvas: HTMLElement;\n\n    private getZoomLevelReal: () => number;\n\n    private registeredSelectableLists: (() => Selectable[])[] = [];\n\n    private onMouseUpCallbacks: (() => void)[] = [];\n    private onMouseMoveCallbacks: ((e: MouseEvent) => void)[] = [];\n    private registeredStateLists: (() => any[])[] = [];\n\n\n    constructor(vscode: any, canvas: HTMLElement, getZoomLevelReal: () => number) {\n        this.vscode = vscode;\n        this.canvas = canvas;\n        this.getZoomLevelReal = getZoomLevelReal;\n\n        this.canvas.addEventListener('mousedown', this.onMouseDownInCanvas);\n\n        document.addEventListener('keydown', this.onKeyDown);\n    }\n\n    private onKeyDown = (e: KeyboardEvent): void => {\n        if (e.key === 'Delete') {\n            const selectedSelectables = this.getSelectedSelectables();\n            selectedSelectables.forEach(selectable => selectable.delete());\n            // const deleteNext = (index: number): void => {\n            //     if (index < selectedSelectables.length) {\n            //         // Delete the current selectable\n            //         selectedSelectables[index].delete();\n\n            //         // Schedule the next deletion5\n            //         setTimeout(() => deleteNext(index + 1), 100);\n            //     } else {\n            //         // After all deletions, send the state list after 100 ms\n            //         setTimeout(() => {\n            //             const stateMessages = this.getStateList();\n\n            //             this.vscode.postMessage({ type: 'print', text: stateMessages });\n            //             this.vscode.postMessage({ type: 'updateStates', updates: stateMessages });\n            //         }, 100);\n            //     }\n            // };\n\n            // Start the deletion process\n            // deleteNext(0);\n\n            // Optionally, unselect all after deletion starts\n            this.unselectAll();\n        } \n    };\n\n    public updateSelectables(): void {\n        this.getSelectableList().forEach(selectable => {\n            selectable.addOnMouseDownListener(this.onMouseDownInSelectable);\n        });\n    }\n\n    private getSelectableList(): Selectable[] {\n        return this.registeredSelectableLists.flatMap(getSelectableList => getSelectableList());\n    }\n\n    private getStateList(): any[] {\n        return this.registeredStateLists.flatMap(getStateList => getStateList()).flat();\n    }\n\n    private unselectAll(): void {\n        this.getSelectableList().forEach(selectable => selectable.unselect());\n    }\n\n    public getSelectedSelectables(): Selectable[] {\n        return this.getSelectableList().filter(selectable => selectable.isSelected());\n    }\n\n    public registerSelectableList(getSelectableList: () => Selectable[]): void {\n        this.registeredSelectableLists.push(getSelectableList);\n    }\n\n    public registerStateList(getStateList: () => any[]): void {\n        this.registeredStateLists.push(getStateList);\n    }\n\n    private onMouseDownInSelectable = (canvasElement: CanvasElement, e: MouseEvent): void => {\n        this.vscode.postMessage({ type: 'print', text: `Mouse down event happened` });\n        let selectable: Selectable;\n        if (!(canvasElement instanceof Selectable)) {\n            return;\n        }\n        else {\n            selectable = canvasElement as Selectable;\n        }\n        if (e.button !== 1) {\n            this.vscode.postMessage({ type: 'print', text: `button not 1` });\n\n            if (!selectable.isSelected()) {\n                if (e.shiftKey) {\n                    // Toggle selection if Shift is pressed\n                    this.vscode.postMessage({ type: 'print', text: `Toggle` });\n\n                    selectable.toggleSelect();\n                } else {\n                    // Clear selection and select only this block\n                    this.vscode.postMessage({ type: 'print', text: `Select only selectable: ${selectable}` });\n\n                    this.unselectAll();\n                    selectable.select();\n                }\n            }\n\n            this.vscode.postMessage({ type: 'print', text: `Selectable selected: ${selectable.isSelected()}` });\n\n\n            // Store the initial mouse position\n            this.dragStartX = e.clientX;\n            this.dragStartY = e.clientY;\n            this.isDragging = false; // Reset dragging state\n        \n            // Add a temporary mousemove listener to detect drag threshold\n            const onMouseMoveThreshold = (moveEvent: MouseEvent) => {\n                const deltaX = Math.abs(moveEvent.clientX - this.dragStartX);\n                const deltaY = Math.abs(moveEvent.clientY - this.dragStartY);\n\n                this.vscode.postMessage({ type: 'print', text: `Let see if drag: deltaX ${deltaX} deltaY ${deltaY}` });\n        \n                if (deltaX > this.dragThreshold || deltaY > this.dragThreshold) {\n                    // Exceeded drag threshold, start dragging\n                    this.isDragging = true;\n                    this.vscode.postMessage({ type: 'print', text: `Drag started` });\n\n                    document.removeEventListener('mousemove', onMouseMoveThreshold);\n        \n                    // Start dragging selected blocks\n                    if (!selectable.isSelected()) {\n                        // If the block is not already selected, add it to the selection\n                        selectable.select();\n                    }\n                    document.addEventListener('mousemove', this.onMouseMoveDrag);\n                    document.addEventListener('mouseup', this.onMouseUpDrag);\n                }\n            };\n        \n            document.addEventListener('mousemove', onMouseMoveThreshold);\n        \n            // Handle mouseup to detect a simple click\n            const onMouseUpThreshold = () => {\n                document.removeEventListener('mousemove', onMouseMoveThreshold);\n                document.removeEventListener('mouseup', onMouseUpThreshold);\n        \n                if (!this.isDragging) {\n                    // If no drag occurred, treat it as a simple click\n                    if (e.shiftKey) {\n                        // Toggle selection if Shift is pressed\n                        selectable.toggleSelect();\n                    } else {\n                        // Clear selection and select only this block\n                        this.unselectAll();\n                        selectable.select();\n                    }\n                }\n            };\n        \n            document.addEventListener('mouseup', onMouseUpThreshold);\n        }\n    };\n\n    private onMouseDownInCanvas = (e: MouseEvent): void => {\n        if (e.button !== 1) {\n            if (e.target !== this.canvas) {\n                return; // Ignore clicks on child elements\n            }\n            this.startBoxSelection(e);\n        }\n    };\n\n    private startBoxSelection(e: MouseEvent): void {\n        this.unselectAll();\n        \n        // Get the canvas's bounding rectangle\n        const canvasRect = this.canvas.getBoundingClientRect();\n    \n        // Adjust mouse coordinates to be relative to the canvas\n        const adjustedX = (e.clientX - canvasRect.left) / this.getZoomLevelReal();\n        const adjustedY = (e.clientY - canvasRect.top) / this.getZoomLevelReal();\n    \n        this.selectionBox = document.createElement('div');\n        this.selectionBox.className = 'selection-box';\n        this.canvas.appendChild(this.selectionBox);\n    \n        this.dragStartX = adjustedX;\n        this.dragStartY = adjustedY;\n    \n        this.selectionBox.style.left = `${this.dragStartX}px`;\n        this.selectionBox.style.top = `${this.dragStartY}px`;\n    \n        document.addEventListener('mousemove', this.onMouseMoveSelectionBox);\n        document.addEventListener('mouseup', this.onMouseUpSelectionBox);\n    }\n\n\n    public onMouseUpDrag = (): void => {\n        this.vscode.postMessage({ type: 'print', text: `Mouse up` });\n\n        if (this.isDragging) {\n            let stateMessages = this.getStateList();\n\n            this.vscode.postMessage({ type: 'print', text: stateMessages });\n\n            this.vscode.postMessage({ type: 'updateStates', updates: stateMessages });\n        }\n\n        document.removeEventListener('mousemove', this.onMouseMoveDrag);\n        document.removeEventListener('mouseup', this.onMouseUpDrag);\n\n        this.onMouseUpCallbacks.forEach(callback => callback());\n    };\n\n    private onMouseUpSelectionBox = (): void => {\n        if (this.selectionBox) {\n            try {\n                this.canvas.removeChild(this.selectionBox);\n            } catch (e) {}\n            // End box selection\n            this.selectionBox = null;\n        }\n\n        document.removeEventListener('mousemove', this.onMouseMoveSelectionBox);\n        document.removeEventListener('mouseup', this.onMouseUpSelectionBox);\n    };\n\n    private onMouseMoveSelectionBox = (e: MouseEvent): void => {        \n        this.vscode?.postMessage({ type: 'print', text: `Mouse move selection box` });\n        if (this.selectionBox) {\n            // Update selection box size\n            const canvasRect = this.canvas.getBoundingClientRect();\n\n            const adjustedX = (e.clientX - canvasRect.left) / this.getZoomLevelReal();\n            const adjustedY = (e.clientY - canvasRect.top) / this.getZoomLevelReal();\n\n            const scaledWidth = (adjustedX - this.dragStartX);\n            const scaledHeight = (adjustedY - this.dragStartY);\n\n            this.selectionBox.style.left = `${Math.min(this.dragStartX, adjustedX)}px`;\n            this.selectionBox.style.top = `${Math.min(this.dragStartY, adjustedY)}px`;\n            this.selectionBox.style.width = `${Math.abs(scaledWidth)}px`;\n            this.selectionBox.style.height = `${Math.abs(scaledHeight)}px`;\n    \n            // Update selected blocks based on the selection box\n            this.updateSelectionBox();\n        }\n    };\n\n    private updateSelectionBox(): void {\n        const boxRect = this.selectionBox!.getBoundingClientRect();\n\n        this.getSelectableList().forEach(selectable => {\n            const selectableEl = selectable.getElement();\n            if (selectableEl) {\n                const blockRect = selectableEl.getBoundingClientRect();\n\n                if (\n                    blockRect.left < boxRect.right &&\n                    blockRect.right > boxRect.left &&\n                    blockRect.top < boxRect.bottom &&\n                    blockRect.bottom > boxRect.top\n                ) {\n                    selectable.select();\n                } else {\n                    selectable.unselect();\n                }\n            }\n        });\n    }\n\n    public onMouseMoveDrag = (e: MouseEvent): void => {\n        this.vscode.postMessage({ type: 'print', text: `Drag move` });\n\n        const scaledDeltaX = (e.clientX - this.dragStartX) / this.getZoomLevelReal();\n        const scaledDeltaY = (e.clientY - this.dragStartY) / this.getZoomLevelReal();\n        \n        if (this.isDragging) {\n            this.getSelectedSelectables().forEach(selectable => {\n                if (isMovable(selectable)) {\n                    selectable.moveDelta(scaledDeltaX, scaledDeltaY);\n                }\n            });\n\n            this.dragStartX = e.clientX;\n            this.dragStartY = e.clientY;\n        }\n\n        this.onMouseMoveCallbacks.forEach(callback => {\n            callback(e);\n        });\n    };\n\n    public addOnMouseMoveListener(callback: (e: MouseEvent) => void): void {\n        this.onMouseMoveCallbacks.push(callback);\n    }\n    \n    public addOnMouseUpListener(callback: () => void): void {\n        this.onMouseUpCallbacks.push(callback);\n    }\n\n}","export function getNonce() {\n\tlet text = '';\n\tconst possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\tfor (let i = 0; i < 32; i++) {\n\t\ttext += possible.charAt(Math.floor(Math.random() * possible.length));\n\t}\n\treturn text;\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Link, SourceNode, TargetNode } from './Link';\r\nimport { Block } from './Block';\r\nimport { BlockInteractionManager } from './BlockInteractionManager';\r\nimport { LinkInteractionManager } from './LinkInteractionManager';\r\nimport { Selectable } from './Selectable';\r\nimport { SelectableManager } from './SelectableManager';\r\nimport { link } from 'fs';\r\n\r\n\r\ndeclare const acquireVsCodeApi: () => any;\r\nconst vscode = acquireVsCodeApi();\r\n\r\n\r\n(function () {\r\n    const canvas = document.querySelector('.canvas') as HTMLElement;\r\n    const zoomContainer = document.querySelector('.zoom-container') as HTMLElement;\r\n    const topControls = document.querySelector('.top-controls') as HTMLElement;\r\n    const canvasContainer = document.querySelector('.canvas-container') as HTMLElement;\r\n\r\n\r\n    let zoomLevel = 2; // Default zoom level\r\n    const zoomStep = 0.1; // Step for zooming in/out\r\n    const minZoom = 1; // Minimum zoom level\r\n    const maxZoom = 4; // Maximum zoom level\r\n\r\n\r\n    let isPanning = false;\r\n    let panStartX = 0;\r\n    let panStartY = 0;\r\n\r\n    let canvasHeigh = 4000;\r\n    let canvasWidth = 8000;\r\n\r\n    let linkInteractionManager: LinkInteractionManager;\r\n    let blockInteractionManager: BlockInteractionManager;\r\n    let selectableManager: SelectableManager;\r\n\r\n    blockInteractionManager = new BlockInteractionManager(vscode);\r\n    linkInteractionManager = new LinkInteractionManager(vscode, canvas, document.querySelector('.links') as SVGSVGElement, blockInteractionManager);\r\n    selectableManager = new SelectableManager(vscode, canvas, getZoomLevelReal);\r\n\r\n    selectableManager.registerSelectableList(() => blockInteractionManager.blocks);\r\n    selectableManager.registerSelectableList(() => linkInteractionManager.getAllLinkSegments());\r\n    selectableManager.registerSelectableList(() => linkInteractionManager.getAllLinkNodes());\r\n    selectableManager.registerStateList(() => blockInteractionManager.blocks.map(block => block.getState()));\r\n    selectableManager.registerStateList(() => { \r\n            const stateMessages = linkInteractionManager.links.flatMap(link => link.getState());\r\n            return [{ type: 'moveLinkBatch', updates: stateMessages }];\r\n    });\r\n    selectableManager.addOnMouseMoveListener(linkInteractionManager.highlightNodesNearPorts);\r\n    selectableManager.addOnMouseUpListener(linkInteractionManager.connectNodesToPorts);\r\n    selectableManager.updateSelectables();\r\n    selectableManager.addOnMouseMoveListener(linkInteractionManager.updateLinks);\r\n\r\n\r\n    function getZoomLevelReal(): number {\r\n        return zoomLevel/2;\r\n    }\r\n    \r\n\r\n    function createRandomLink(): void {\r\n        if (blockInteractionManager.blocks.length < 2) {\r\n            vscode.postMessage({ type: 'print', text: 'Not enough blocks to create a link.' });\r\n            return;\r\n        }\r\n    \r\n        // Randomly select two different blocks\r\n        const sourceIndex = Math.floor(Math.random() * blockInteractionManager.blocks.length);\r\n        let targetIndex = Math.floor(Math.random() * blockInteractionManager.blocks.length);\r\n    \r\n        // Ensure the source and target are not the same\r\n        while (targetIndex === sourceIndex) {\r\n            targetIndex = Math.floor(Math.random() * blockInteractionManager.blocks.length);\r\n        }\r\n    \r\n        const sourceBlock = blockInteractionManager.blocks[sourceIndex];\r\n        const targetBlock = blockInteractionManager.blocks[targetIndex];\r\n    \r\n        // Create a link between the two blocks\r\n        let sourceNode = new SourceNode(sourceBlock, 0);\r\n        let targetNode = new TargetNode(targetBlock, 0);\r\n        linkInteractionManager.createLink(sourceNode, targetNode, []);\r\n    \r\n        vscode.postMessage({ type: 'print', text: `Created link between ${sourceBlock.label} and ${targetBlock.label}` });\r\n    }\r\n\r\n    function renderHTML(json: {\r\n        blocks?: {\r\n            id: string;\r\n            label: string;\r\n            x: number;\r\n            y: number;\r\n            inputPorts: number;\r\n            outputPorts: number;\r\n        }[];\r\n        links?: {\r\n            id: string;\r\n            sourceId: string;\r\n            sourcePort: number;\r\n            targetId: string;\r\n            targetPort: number;\r\n            sourceX: number;\r\n            sourceY: number;\r\n            targetX: number;\r\n            targetY: number;\r\n            intermediateNodes: {\r\n                id: string\r\n                x: number;\r\n                y: number;\r\n            }[];\r\n        }[];\r\n    }): void {\r\n        vscode.postMessage({ type: 'print', text: `Render html: ${JSON.stringify(json, null, 2)}` });\r\n        vscode.postMessage({ type: 'print', text: `Rendering ${blockInteractionManager.blocks.length} blocks` });\r\n        canvas.innerHTML = ''; // Clear canvas\r\n        blockInteractionManager.blocks.forEach(block => block.addElementToCanvas(canvas));\r\n\r\n\r\n        topControls.innerHTML = '';\r\n        // Add button\r\n        const btn = document.createElement('button');\r\n        btn.textContent = 'Add Block';\r\n        btn.addEventListener('click', () => vscode.postMessage({ type: 'addBlock' }));\r\n        topControls.appendChild(btn);\r\n\r\n        // Add button to create a link\r\n        const btnCreateLink = document.createElement('button');\r\n        btnCreateLink.textContent = 'Create Link';\r\n        btnCreateLink.addEventListener('click', createRandomLink);\r\n        topControls.appendChild(btnCreateLink);\r\n\r\n        const btnZoomIn = document.createElement('button');\r\n        btnZoomIn.textContent = 'Zoom In';\r\n        const btnZoomOut = document.createElement('button');\r\n        btnZoomOut.textContent = 'Zoom Out';\r\n        const btnResetZoom = document.createElement('button');\r\n        btnResetZoom.textContent = 'Reset Zoom';\r\n\r\n        btnZoomIn.addEventListener('click', () => setZoom(zoomLevel + zoomStep));\r\n        btnZoomOut.addEventListener('click', () => setZoom(zoomLevel - zoomStep));\r\n        btnResetZoom.addEventListener('click', () => setZoom(2));\r\n\r\n        topControls.appendChild(btnZoomIn);\r\n        topControls.appendChild(btnZoomOut);\r\n        topControls.appendChild(btnResetZoom);\r\n\r\n        zoomContainer.addEventListener('wheel', handleMouseWheelZoom);\r\n        canvasContainer.addEventListener('mousedown', onMouseDownForPanning);\r\n\r\n        \r\n\r\n        linkInteractionManager.updateLinks();\r\n\r\n        centerCanvas();\r\n\r\n        setZoom(zoomLevel);\r\n\r\n        let svgElement = linkInteractionManager.renderLinks((json.links || []).map(link => ({\r\n            id: link.id,\r\n            sourceId: link.sourceId,\r\n            targetId: link.targetId,\r\n            sourcePort: link.sourcePort, \r\n            targetPort: link.targetPort, \r\n            sourceX: link.sourceX,\r\n            sourceY: link.sourceY,\r\n            targetX: link.targetX,\r\n            targetY: link.targetY,\r\n            intermediateNodes: link.intermediateNodes \r\n        })));\r\n\r\n        canvasContainer.appendChild(svgElement);\r\n        linkInteractionManager.updateLinks();\r\n        selectableManager.updateSelectables();      \r\n    }\r\n\r\n    \r\n\r\n    function centerCanvas(): void {\r\n        // Scroll to the center of the canvas\r\n        // canvasContainer.scrollLeft = (canvas.scrollWidth - canvasContainer.clientWidth) / 2;\r\n        // canvasContainer.scrollTop = (canvas.scrollHeight - canvasContainer.clientHeight) / 2;\r\n    }\r\n\r\n    function updateWebView(jsonText: string): void {\r\n        vscode.postMessage({ type: 'print', text: `Update blocks` });\r\n        let json: { blocks?: { id: string; label: string; x: number; y: number; inputPorts: number; outputPorts: number}[]; \r\n                    links?: { id: string, sourceId: string; sourcePort: number; targetId: string; targetPort: number; \r\n                        sourceX: number; sourceY: number; targetX: number; targetY: number; intermediateNodes: { id: string; x: number; y: number }[] }[] };\r\n        try {\r\n            json = JSON.parse(jsonText || '{}');\r\n        } catch {\r\n            canvas.textContent = 'Invalid JSON';\r\n            return;\r\n        }\r\n\r\n        json.blocks?.forEach(blockData => {\r\n            blockInteractionManager.blocks.find(b => b.id === blockData.id)?.moveTo(blockData.x, blockData.y);\r\n            var block = blockInteractionManager.blocks.find(b => b.id === blockData.id);\r\n            if (block) {\r\n                block.parseStateFromJson(blockData);\r\n            } else {\r\n                vscode.postMessage({ type: 'print', text: `Block ID does not exist, creating block: ${blockData.id}` });\r\n                blockInteractionManager.createBlock(blockData.id, blockData.label, blockData.x, blockData.y, blockData.inputPorts, blockData.outputPorts);\r\n            }\r\n        });\r\n\r\n        blockInteractionManager.blocks.forEach((block: Block) => {\r\n            const blockData = json.blocks?.find(b => b.id === block.id);\r\n            if (!blockData) {\r\n                blockInteractionManager.deleteBlock(block, false);\r\n            }\r\n        });\r\n\r\n        linkInteractionManager.links.forEach((link: Link) => {\r\n            const linkData = json.links?.find(l => l.id === link.id);\r\n            if (!linkData) {\r\n                linkInteractionManager.deleteLink(link, false);\r\n            }\r\n        });\r\n\r\n\r\n        renderHTML(json);\r\n    }\r\n\r\n\r\n    function setZoom(level: number): void {\r\n    \r\n        // Clamp the zoom level between minZoom and maxZoom\r\n        zoomLevel = Math.min(maxZoom, Math.max(minZoom, level));\r\n        zoomContainer.style.transform = `scale(${zoomLevel})`;\r\n\r\n        // Dynamically adjust the canvas size based on the zoom level\r\n        const scaledWidth = Math.min(canvasWidth/2 * zoomLevel, canvasWidth/2); \r\n        const scaledHeight = Math.min(canvasHeigh/2 * zoomLevel, canvasHeigh/2);\r\n    \r\n        zoomContainer.style.width = `${scaledWidth}px`;\r\n        zoomContainer.style.height = `${scaledHeight}px`;\r\n\r\n        linkInteractionManager.updateLinks(); // Update the links to match the new zoom level\r\n        vscode.postMessage({ type: 'print', text: `Zoom level: ${zoomLevel}` });\r\n    }\r\n\r\n    function handleMouseWheelZoom(e: WheelEvent): void {\r\n        e.preventDefault(); // Prevent default scrolling behavior\r\n\r\n        // Adjust zoom level based on scroll direction\r\n        if (e.deltaY < 0) {\r\n            setZoom(zoomLevel + zoomStep); // Zoom in\r\n        } else if (e.deltaY > 0) {\r\n            setZoom(zoomLevel - zoomStep); // Zoom out\r\n        }\r\n    }\r\n\r\n    function onMouseDownForPanning(e: MouseEvent): void {\r\n        if (e.button === 1) { // Middle mouse button\r\n            e.preventDefault(); // Prevent default middle mouse behavior (e.g., auto-scroll)\r\n            isPanning = true;\r\n            canvasContainer.classList.add('panning'); // Add the class\r\n\r\n            // Store the initial mouse position\r\n            panStartX = e.clientX;\r\n            panStartY = e.clientY;\r\n    \r\n            // Add event listeners for mousemove and mouseup\r\n            document.addEventListener('mousemove', onMouseMoveForPanning);\r\n            document.addEventListener('mouseup', onMouseUpForPanning);\r\n        }\r\n    }\r\n\r\n    function onMouseMoveForPanning(e: MouseEvent): void {\r\n        if (!isPanning) { return; }\r\n    \r\n        // Calculate the distance moved\r\n        const deltaX = e.clientX - panStartX;\r\n        const deltaY = e.clientY - panStartY;\r\n    \r\n        // Adjust the scroll position of the canvasContainer\r\n        canvasContainer.scrollLeft -= deltaX;\r\n        canvasContainer.scrollTop -= deltaY;\r\n    \r\n        // Update the starting position for the next movement\r\n        panStartX = e.clientX;\r\n        panStartY = e.clientY;\r\n\r\n        linkInteractionManager.updateLinks();\r\n    }\r\n    \r\n    function onMouseUpForPanning(e: MouseEvent): void {\r\n        if (e.button === 1) { // Middle mouse button\r\n            isPanning = false;\r\n            canvasContainer.classList.remove('panning'); // Remove the class\r\n\r\n            // Remove the event listeners\r\n            document.removeEventListener('mousemove', onMouseMoveForPanning);\r\n            document.removeEventListener('mouseup', onMouseUpForPanning);\r\n        }\r\n    }\r\n\r\n\r\n    // Listen for messages from extension\r\n    window.addEventListener('message', (e: MessageEvent) => {\r\n        if (e.data.type === 'update') {\r\n            updateWebView(e.data.text);\r\n            vscode.setState({ text: e.data.text });\r\n        }\r\n    });\r\n\r\n    // Restore state if reloaded\r\n    const state = vscode.getState();\r\n    if (state) {\r\n        updateWebView(state.text);\r\n    }\r\n})();"],"names":[],"sourceRoot":""}